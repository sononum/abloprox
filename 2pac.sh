#!/bin/sh
#
# Take the blacklists *.txt and turn them into a filtering PAC file.
#
# Works without any proxy.
# Uses 8.8.8.8:53 (Google) as a black-hole.
#
# Inspired by 
#    http://www.schooner.com/~loverso/no-ads/
#    http://www.antd.org/files/os/iphone/proxy.pac
#
cd "$(dirname "$0")"

cat <<InputComesFromHERE
//
// Filtering PAC file generated by $0 on $(date)
//
// inspired by
// - inspired by http://www.schooner.com./~loverso/no-ads/
// - https://de.wikipedia.org/wiki/Proxy_Auto-Config#Die_PAC-Datei
// - http://www.proxypacfiles.com/proxypac/index.php?option=com_content&view=article&id=58&Itemid=87
//
// auto config:
// 1. ensure there's a host 'wpad' in the current network, see
//   - https://en.wikipedia.org/wiki/Web_Proxy_Autodiscovery_Protocol#Context
//   - http://fritz.box/net/network_user_devices.lua
// 2. have a http webserver running on that host
// 3. ensure http://wpad/wpad.dat or http://wpad.fritz.box/wpad.dat contains this PAC file

var bypass = "DIRECT";
var blackhole = "PROXY 0.0.0.0:65535";  // Safari on iOS let's through
// blackhole = "SOCKS !";               // Safari on iOS let's through
// blackhole = "PROXY 127.0.0.1:1234";  // Safari on iOS let's through. http://www.antd.org/files/os/iphone/proxy.pac
blackhole = "PROXY 8.8.8.8:53";         // Google (sigh). http://shion.ca/ios/adblockpub.js via http://forums.macrumors.com/showpost.php?p=20626459&postcount=6

function addHost(arr, host) {
  arr.unshift(host.replace(/(\.)/g,'\\\\\$1'));
}

var isActive = 1;

var blackPat = function() {
  var a = new Array();
InputComesFromHERE

for black in *.txt
do
  echo "  // $(ls -l "$black")"
  sed -n -E -e "/^#/s:#:  //:p" -e '/  \/\//!s/([a-zA-Z0-9.-]+)/  addHost(a, "&");/p' "$black"
done

cat <<InputComesFromHERE
  // console.log('black: ^(.+\.)?((' + a.join(')|(') + '))$' );
  return new RegExp( '^(.+\.)?((' + a.join(')|(') + '))$' );
}();

function FindProxyForURL(url, host) {
  url = url.toLowerCase();
  host = host.toLowerCase();

  // Excellent kludge from Sean M. Burke:
  // Enable or disable no-ads for the current browser session.
  //
  // To disable, visit this URL:      http://no-ads.int/off
  // To re-enable, visit this URL:    http://no-ads.int/on
  //
  // (this will not work with Mozilla or Opera if the alert()s are present)
  //
  if( "no-ads.int" == host ) {
    if( shExpMatch(url, "*://no-ads.int/on") ) {
      isActive = 1;
      // LOG alert("no-ads has been enabled.\n" + url);
    } else if( shExpMatch(url, "*://no-ads.int/off") ) {
      isActive = 0;
      // LOG alert("no-ads has been disabled.\n" + url);
    } else if( shExpMatch(url, "*://no-ads.int/") ) {
      alert("no-ads is " + (isActive ? "enabled" : "disabled") + ".\n" + url);
    } else {
      alert("no-ads unknown option.\n" + url);
    }
    return blackhole;
  }

  if( ! isActive )
    return bypass;

  if( null != host.match(blackPat) )
    return blackhole;

  return bypass;
}
InputComesFromHERE
